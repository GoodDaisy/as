// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class testSquareArrayU32Helper {
  static encode(message: testSquareArrayU32Helper, writer: Writer): void {
    const arg1 = message.arg1;
    if (arg1.length !== 0) {
      for (let i: i32 = 0; i < arg1.length; ++i) {
        writer.uint32(8);
        writer.uint32(arg1[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): testSquareArrayU32Helper {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new testSquareArrayU32Helper();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.arg1.push(reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  arg1: Array<u32>;

  constructor(arg1: Array<u32> = []) {
    this.arg1 = arg1;
  }
}

export function encodetestSquareArrayU32Helper(
  message: testSquareArrayU32Helper
): Uint8Array {
  return Protobuf.encode(message, testSquareArrayU32Helper.encode);
}

export function decodetestSquareArrayU32Helper(
  buffer: Uint8Array
): testSquareArrayU32Helper {
  return Protobuf.decode<testSquareArrayU32Helper>(
    buffer,
    testSquareArrayU32Helper.decode
  );
}
