// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class testArrayI32RetHelper {
  static encode(message: testArrayI32RetHelper, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.arg1);

    writer.uint32(16);
    writer.int32(message.arg2);
  }

  static decode(reader: Reader, length: i32): testArrayI32RetHelper {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new testArrayI32RetHelper();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.arg1 = reader.int32();
          break;

        case 2:
          message.arg2 = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  arg1: i32;
  arg2: i32;

  constructor(arg1: i32 = 0, arg2: i32 = 0) {
    this.arg1 = arg1;
    this.arg2 = arg2;
  }
}

export function encodetestArrayI32RetHelper(
  message: testArrayI32RetHelper
): Uint8Array {
  return Protobuf.encode(message, testArrayI32RetHelper.encode);
}

export function decodetestArrayI32RetHelper(
  buffer: Uint8Array
): testArrayI32RetHelper {
  return Protobuf.decode<testArrayI32RetHelper>(
    buffer,
    testArrayI32RetHelper.decode
  );
}
