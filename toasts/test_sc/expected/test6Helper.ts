// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.23.2

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class test6Helper {
  static encode(message: test6Helper, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.str1);

    writer.uint32(18);
    writer.string(message.str2);
  }

  static decode(reader: Reader, length: i32): test6Helper {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new test6Helper();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.str1 = reader.string();
          break;

        case 2:
          message.str2 = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  str1: string;
  str2: string;

  constructor(str1 = "", str2 = "") {
    this.str1 = str1;
    this.str2 = str2;
  }
}

export function encodetest6Helper(message: test6Helper): Uint8Array {
  return Protobuf.encode(message, test6Helper.encode);
}

export function decodetest6Helper(buffer: Uint8Array): test6Helper {
  return Protobuf.decode<test6Helper>(buffer, test6Helper.decode);
}
